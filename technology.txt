git init  创建git仓库(把当前目录变成git可以管理的仓库) ls -ah 查看是否创建成功
git add  添加文件（把文件添加到仓库）没有消息弹出表示提交成功
git commit -m "wrote a readme file" 提交文件 （把文件提交到仓库）（返回的信息中 1 file changed 表示一个文件被改动 2 insertions 表示插入了两行内容 -m后面的是提交说明）

git status 随时掌握工作区的状态
git diff 查看修改内容
git log 查看历史记录
git reset --hard HEAD^ 回退到上一个版本 ^^表示回退到上上个版本
如果想找回那个回退之前的版本，只需要找到commit id 的前几位数就好 git reset --1094a
cat readme.txt 查看当前内容
HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。
 
 工作区 learngit文件夹下
 版本库 .git >暂存区 stage/index > HEAD 
 工作区新添加的一个文件 在使用git status查看状态时 返回的是Untracked

场景1:当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file
 当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。

命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。

git 同步删除文件后同步到远程仓库需要提交一次 再push
